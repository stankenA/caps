{"version":3,"file":"static/js/357.76bf7df4.chunk.js","mappings":"mMAKe,SAASA,IAEtB,IAAAC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAwBC,EAAAA,EAAAA,IAAUC,EAAAA,IAA1BC,EAAGH,EAAHG,IAAKC,EAAMJ,EAANI,QAEbC,EAAAA,EAAAA,YAAU,WACJD,GACFL,GAAc,EAElB,GAAG,CAACK,IAEJ,IAAAE,GAAoCX,EAAAA,EAAAA,UAAS,GAAEY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAShC,OACEG,EAAAA,EAAAA,KAAA,WAASC,UAAS,GAAAC,OAAKd,EAAa,oBAAsB,SAAWe,GAAG,QAAQV,IAAKA,EAAIW,UACvFC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,cAAaG,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,cAAaG,SAAA,EAC1BJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcG,SAAC,oCAG7BJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYG,SAAC,suBAI5BJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBG,SAC7BE,EAAAA,GAAAA,KAAa,SAACC,EAAMC,GAAC,OACpBH,EAAAA,EAAAA,MAAA,MAAIJ,UAAS,0DAAAC,OAEGK,EAAKE,SAAQ,oBAAAP,OACzBM,IAAMV,EAAa,qBAAuB,GAAE,oBAAAI,OAC5CM,EAAIV,EAAa,oBAAsB,IACzCY,MAAO,CAAEC,OAAQC,KAAKC,MAAM,KAAOL,EAAI,KAAMJ,SAAA,CAG5CG,EAAKO,IACFP,EAAKO,IAAIC,KAAI,SAACD,GAAG,OACjBd,EAAAA,EAAAA,KAAA,OAAKgB,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,KAAMlB,UAAS,yBAAAC,OAA2BY,EAAIK,OAAaL,EAAIK,KAAQ,IAEnG,IACJd,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iBAAgBG,SAAA,EAC7BJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBG,SAC5BG,EAAKa,SAERpB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcG,SACxBG,EAAKc,SAERrB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaG,SACvBG,EAAKe,QAERjB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,eAAcG,SAAA,EAC3BJ,EAAAA,EAAAA,KAAA,OAAKgB,IAAKT,EAAKgB,GAAIL,IAAI,wBAASjB,UAAU,eAC1CD,EAAAA,EAAAA,KAAA,KAAGwB,KAAMjB,EAAKkB,KAAMxB,UAAU,cAAcyB,OAAO,SAASC,IAAI,aAAYvB,SAAEG,EAAKqB,iBAnBlFrB,EAAKa,MAsBP,OAGTpB,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAASrB,UAAU,uBAAuB4B,QApD7D,WACMvB,EAAAA,GAAAA,OAAkB,IAAMR,EAC1BC,EAAc,GAEdA,EAAcD,EAAa,EAE/B,EA8CoFM,UAC5EJ,EAAAA,EAAAA,KAAA,QAAMC,UAAS,gBAAAC,OAAiC,IAAfJ,EAAmB,qBAAuB,SAE7EE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAIxB,C","sources":["pages/CasesSection.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { casesArr, observerOptions } from '../utils/constants';\nimport { useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nexport default function CasesPage() {\n\n  const [isRendered, setIsRendered] = useState(false);\n  const { ref, inView } = useInView(observerOptions);\n\n  useEffect(() => {\n    if (inView) {\n      setIsRendered(true);\n    }\n  }, [inView]);\n\n  const [activeCard, setActiveCard] = useState(0);\n  function handleNextBtn() {\n    if (casesArr.length - 1 === activeCard) {\n      setActiveCard(0)\n    } else {\n      setActiveCard(activeCard + 1);\n    }\n  }\n\n  return (\n    <section className={`${isRendered ? 'cases cases_shown' : 'cases'}`} id=\"cases\" ref={ref}>\n      <div className=\"cases__card\">\n        <div className=\"cases__left\">\n          <h2 className=\"cases__title\">\n            КЕЙСЫ\n          </h2>\n          <p className=\"cases__txt\">\n            Узнайте о том, как группа друзей, воплощая мечты клиентов, воплотила свою. В 4-х актах рассказываем о себе и о том, как на свет появилось агентство CAPS.\n          </p>\n        </div>\n        <ul className=\"cases__list list\">\n          {casesArr.map((item, i) => (\n            <li className={`\n              cases__item\n              cases__item_${item.modifier}\n              ${i === activeCard ? 'cases__item_active' : ''}\n              ${i < activeCard ? 'cases__item_shown' : ''}`}\n              style={{ zIndex: Math.floor(100 / (i + 1)) }}\n              key={item.title}\n            >\n              {item.img\n                ? item.img.map((img) => (\n                  <img src={img.url} alt={img.name} className={`cases__img cases__img_${img.name}`} key={img.name} />\n                ))\n                : ''}\n              <div className=\"cases__content\">\n                <h3 className=\"cases__subtitle\">\n                  {item.title}\n                </h3>\n                <p className=\"cases__brief\">\n                  {item.brief}\n                </p>\n                <p className=\"cases__type\">\n                  {item.type}\n                </p>\n                <div className=\"cases__links\">\n                  <img src={item.qr} alt=\"QR-код\" className=\"cases__qr\" />\n                  <a href={item.link} className=\"cases__link\" target=\"_blank\" rel=\"noreferrer\">{item.action}</a>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n        <button type=\"button\" className=\"cases__button button\" onClick={handleNextBtn}>\n          <span className={`cases__arrow ${activeCard === 1 ? 'cases__arrow_white' : ''}`}></span>\n        </button>\n        <span className=\"cases__bg\"></span>\n      </div>\n    </section>\n  )\n}\n"],"names":["CasesPage","_useState","useState","_useState2","_slicedToArray","isRendered","setIsRendered","_useInView","useInView","observerOptions","ref","inView","useEffect","_useState3","_useState4","activeCard","setActiveCard","_jsx","className","concat","id","children","_jsxs","casesArr","item","i","modifier","style","zIndex","Math","floor","img","map","src","url","alt","name","title","brief","type","qr","href","link","target","rel","action","onClick"],"sourceRoot":""}